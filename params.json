{"name":"Dot-net-sdk","tagline":"LoginRadius .NET SDK is a development kit that lets you integrate Social Login such as Facebook, Google, Twitter and over 20 more on a ASP.Net website. The SDK also fetches user profile data and can be customized from your LoginRadius user account. Ex: social icon sets, login interface, provider settings, etc. The SDK works with C#.Net and VB.Net both languages. You can also use the SDK for your Asp.Net MVC websites.","body":"LoginRadius library for ASP.NET (C# and VB)\r\n=====\r\n.Net library for the LoginRadius API. Get social authentication, user profile data and send messages using many social network and email clients such as Facebook, Google, Twitter, Yahoo, LinkedIn, etc.\r\n\r\nInstallation\r\n----\r\n 1. **Font-end interface:** Add social login interface code from your LoginRadius user account to your webpage.\r\n 2. **Call-back setup:** Set-up the callback URL in your LoginRadius user account, this is the URL where user would be redirected after authentication.\r\n 3. **Library set-up and installation:** Add the LoginRadius DLLs into your .Net project and follow the instructions to implement the DLL into your callback page.\r\n\r\nSteps to call the library:\r\n\r\n     1. Import the Library reference into your code file\r\n     2. Call IsAuthenticated property to check for authentication validation\r\n     3. If success, call GetBasicUserProfile method to get user's profile data.\r\n       [For Premium paid plans: You can call GetUltimateUserProfile method to get Extended user profile data.]\r\n       visit the link for more information to get list of data: https://www.loginradius.com/product/user-profile-data\r\n\r\n**Sample code for authentication and get basic profile data**\r\n\r\n**C#.Net**\r\n\r\n        using LoginRadiusSDK          //Import the library reference\r\n\r\n\tLoginRadius _loginradius = new LoginRadius(\"Your-LoginRadius-API-Secret-key\"); \r\n    if(_loginradius.IsAuthenticated) {\r\n    \tLoginRadiusBasicUserProfile userprofile = _loginradius.GetBasicUserProfile();\r\n\t\t//fetch all properties for profile data  \r\n          //userprofile.BirthDate -- Birth date of user  \r\n          //if (userprofile.Country != null)  \r\n          //{  \r\n          //    userprofile.Country.Code - country code  \r\n          //    userprofile.Country.Name - country name  \r\n          //}  \r\n          //  \r\n          //Email id generic list   \r\n          //if (userprofile.Email != null)   \r\n          //{  \r\n          //    foreach (var email in userprofile.Email)  \r\n          //    {   \r\n          //        email.Type -- email type (like Primary , Secondary)  \r\n          //        email.Value -- email ID  \r\n          //    }  \r\n          //} \r\n          //userprofile.FirstName -- first name of user  \r\n          //userprofile.FullName -- full name of user   \r\n          //userprofile.Gender -- gender of user  \r\n          //userprofile.ID -- ID of user on provider   \r\n          //userprofile.LastName -- last name of user  \r\n          //userprofile.MiddleName -- middle name of user  \r\n          //userprofile.NickName -- nick name of user  \r\n          //userprofile.Prefix -- prefix of user's name  \r\n          //userprofile.ProfileName -- screenname/username of user   \r\n          //userprofile.Provider -- provider name from where user has authenticated   \r\n          //userprofile.Suffix -- suffix of user's name\r\n\t}\r\n\r\n**VB .Net**\r\n\r\n\tImports LoginRadiusSDK         //Import the library reference\r\n    If _loginradius.IsAuthenticated Then\r\n\t    Dim userprofile As LoginRadiusBasicUserProfile = _loginradius.GetBasicUserProfile()\r\n\t     //fetch user profile properties  \r\n          //userprofile.BirthDate -- Birth date of user  \r\n          //if (userprofile.Country != null)  \r\n          //{  \r\n          //    userprofile.Country.Code - country code  \r\n          //    userprofile.Country.Name - country name  \r\n          //}  \r\n          //  \r\n          //Email id generic list   \r\n          //if (userprofile.Email != null)   \r\n          //{  \r\n          //    foreach (var email in userprofile.Email)  \r\n          //    {   \r\n          //        email.Type -- email type (like Primary , Secondary)  \r\n          //        email.Value -- email ID  \r\n          //    }  \r\n          //}  \r\n\r\n          //userprofile.FirstName -- first name of user  \r\n          //userprofile.FullName -- full name of user   \r\n          //userprofile.Gender -- gender of user  \r\n          //userprofile.ID -- ID of user on provider   \r\n          //userprofile.LastName -- last name of user  \r\n          //userprofile.MiddleName -- middle name of user  \r\n          //userprofile.NickName -- nick name of user  \r\n          //userprofile.Prefix -- prefix of user's name  \r\n          //userprofile.ProfileName -- screenname/username of user   \r\n          //userprofile.Provider -- provider name from where user has authenticated   \r\n          //userprofile.Suffix -- suffix of user's name\r\n    End If\r\n\r\n**Sample code to get Extended user profile (Only for Paid plans - Premium)**\r\n\r\n**C#.Net**\r\n\r\n    if(_loginradius.IsAuthenticated)\r\n    \tvar userprofile = _loginradius.GetUltimateUserProfile();\r\n\r\n**VB .Net**\r\n\r\n    If _loginradius.IsAuthenticated Then\r\n    \tDim userprofile As LoginRadiusUltimateUserProfile = _loginradius.GetUltimateUserProfile()\r\n    End If\r\n\r\n**Tip-1:** If you are using MVC then use Post attribute in Action.\r\n\r\n**Tip-2:** Few providers like Twitter doesn't provide email address with User Profile data, so you need to handle these cases in your callback page.\r\n\r\n\r\nAdvance features(for Paid customers only)\r\n===\r\n\r\nLoginRaidus Contacts API\r\n-----\r\nYou can use this API to fetch contacts from users social networks/email clients - Facebook, Twitter, LinkedIn, Google, Yahoo.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**C#.Net**\r\n\r\n    LoginRadiusSDK.LoginRadiusGetContacts LRContacts = new LoginRadiusSDK.LoginRadiusGetContacts (\"-LoginRadius-session-Token-\", \"-Your-LoginRadius-Secret-key-\");\r\n    \r\n               \tvar contactlist = LRContacts.Getcontacts();\r\n               \tif (contactlist!= null) {\r\n                   \tforeach (var contact in contactlist) {\r\n    \t\t             //contact.ID  - Contact ID\r\n       \t                 //contact.Name – Contact Name\r\n     \t\t             //contact.EmailID – Contact EmailId\r\n    \t\t             //contact.Gender – Contact Gender\r\n    \t\t             //contact.PhoneNumber – Contact PhoneNumber\r\n    \t\t             //contact.Status – Contact Status\r\n    \t\t             //contact.Industry – Contact Industry\r\n                         //contact.ImageUrl – Contact Image Url    \t\t\t\r\n                         //contact.ProfileUrl –Contact Profile Url\r\n                   \t}\r\n              }\r\n\r\n**​VB.Net**\r\n\r\n    Dim LRContacts As New LoginRadiusSDK.LoginRadiusGetContacts\r\n    (\"-LoginRadius-Session-Token--\",\"-Your-LoginRadius-Secret-Key-\")\r\n    Dim contactlist As LoginRadiusSDK.LoginRadiusGetContacts = \r\n    LRContacts.Getcontacts()\r\n    If (contactlist.IsNot Nothing) Then\r\n    \tFor Each contact As String In contactlist\r\n    \t      'contact.ID  - Contact ID\r\n      \t      'contact.Name - Contact Name\r\n              'contact.EmailID - Contact EmailId\r\n              'contact.Gender - Contact Gender\r\n              'contact.PhoneNumber - Contact PhoneNumber\r\n              'contact.Status - Contact Status\r\n              'contact.Industry - Contact Industry\r\n              'contact.ImageUrl - Contact Image Url    \r\n              'contact.ProfileUrl - Contact Profile Url\r\n            Next \r\n     End If\r\n\r\n\r\nLoginRadius Post API\r\n---\r\nYou can use this API to Post data to users social networks/email - Facebook, Twitter, LinkedIn, Google, Yahoo.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**C#.Net**\r\n\r\n    LoginRadiusSDK.LoginRadiusStatus\r\n    lrstatusmessage = new LoginRadiusSDK.LoginRadiusStatus\r\n    ('LoginRadius-session-token', 'Your-LoginRadius-Secret-key');\r\n    \r\n     bool directmessage = lrstatusmessage.UpdateStatus(“To”,”Title”,”Url”,”imageurl-”,”status”,”caption”,”description”);\r\n     string success =””;\r\n            if (directmessage) {\r\n              \t success = \"Your message has send successfully.\";\r\n       \t\t}\r\n          \telse {\r\n               \t success = \"Message sending failed.\";\r\n       \t\t}\r\n\r\n**VB .Net**\r\n\r\n    Dim lrstatusmessage As New LoginRadiusSDK.LoginRadiusStatus  (‘LoginRadius-session-token’,'Your-LoginRadius-Secret-Key')\r\n    \r\n    Dim contactlist As LoginRadiusSDK.LoginRadiusStatus = lrContect.Getcontacts()\r\n               \tIf (contactlist.IsNot Nothing) then\r\n    For Each contact As String In contactlist\r\n     bool directmessage = lrstatusmessage.UpdateStatus(“To”,”Title”,”Url”,”imageurl-”,”status”,”-caption-”,”-description-”) string success =””;\r\n          If directmessage.IsNot Nothing Then\r\n     \tif directmessage = true Then\r\n              success = \"Your message has send successfully.\"\r\n          \tElse\r\n              success = \"Message sending failed.\"\r\n            End If\r\n          End If\r\n\r\n\r\nGet Posts\r\n--\r\nYou can use this API to get posts from users social network - Facebook\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**C#.Net**\r\n\r\n    LoginRadiusSDK.LoginRadiusPosts lrPost= new\r\n    LoginRadiusSDK.LoginRadiusPosts (\"LoginRadius-session-token\", \"Your-LoginRadius-API-secret-key\");  \r\n       \t\r\n    var PostList = lrPost.GetPosts();    \r\n          If (PostList!= null) {\r\n             //fetch all properties like\r\n    \t     foreach (var itemPost in PostList) {\r\n    \t\t      // itemPost.ID       \t-- id of Post\r\n    \t\t      // itemPost.Place    \t-- Place of Post\r\n    \t\t      // itemPost.Name     \t-- Name of Post\r\n    \t\t      // itemPost.Likes    \t-– Likes of Post\r\n    \t\t      // itemPost.StartTime\t-- Start Time of Post\r\n    \t\t      // itemPost.Message  \t-- Message of Post\r\n    \t\t      // itemPost.Picture  \t-- Picture in Post\r\n    \t\t      // itemPost.Title    \t-– Title of Post\r\n    \t\t      // itemPost.Share    \t-- Share  of Post\r\n    \t\t      // itemPost.UpdateTime   -- UpdateTime of Post\r\n    \t       }     \r\n        }\r\n\r\n**VB .Net**\r\n\r\n    Dim lrPost As New LoginRadiusSDK.LoginRadiusPosts  (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\")\r\n       \r\n    Dim lrPost As LoginRadiusSDK.LoginRadiusPosts = lrContect.GetPosts()\t\r\n    \tIf (PostList.IsNot Nothing) then\r\n               'fetch all properties like\r\n    \t   For Each itemPost As String In PostList\r\n    \t\t'itemPost.ID -- id of Post\r\n    \t\t'itemPost.Place -- Place of Post\r\n    \t\t'itemPost.Name  -- Name of Post\r\n    \t\t'itemPost.Likes -- Likes of Post\r\n    \t\t'itemPost.StartTime -- Start Time of Post\r\n    \t\t'itemPost.Message  -- Message of Post\r\n    \t\t'itemPost.Picture -- Picture in Post\r\n    \t\t'itemPost.Title -- Title of Post\r\n    \t\t'itemPost.Share -- Share  of Post\r\n    \t\t'itemPost.UpdateTime -- UpdateTime of Post\r\n    \t Next   \r\n         End If\r\n\r\n\r\nGet Twitter Mentions\r\n--\r\n\r\nYou can use this API to get mentions from users social network - Twitter.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**C#.Net**\r\n\r\n    LoginRadiusSDK.LoginRadiusGetMention lrMention = new\r\n    LoginRadiusSDK.LoginRadiusGetMention (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\");   \r\n         \t\r\n    Var MentionList= lrMention.GetMention ();\r\n     If (MentionList!= null)\r\n     {\r\n      \t//fetch all properties like\r\n            foreach (var itemMention in MentionList)\r\n            {\r\n    \t\t// itemMention.ID    \t-- id of Mention\r\n    \t\t// itemMention.Place \t-- Place of Mention\r\n    \t\t// itemMention.Name  \t-- Name of Mention\r\n    \t\t// itemMention.Text  \t-– Text of Mention\r\n    \t\t// itemMention.DateTime -- DateTime  of Mention\r\n    \t\t// itemMention.ImageUrl  -- ImageUrl in Mention\r\n    \t\t// itemMention.Likes \t-- Likes of Mention\r\n    \t\t// itemMention.LinkUrl   -– LinkUrl of Mention\r\n    \t\t// itemMention.Source\t-- Source  of Mention\r\n                     \t\r\n             }\r\n    }\r\n\r\n**VB.Net**\r\n\r\n    Dim  lrMention As New LoginRadiusSDK.LoginRadiusGetMention(\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\")\r\n    Dim MentionList As LoginRadiusSDK.LoginRadiusGetMention = lrMention.GetMention ()\r\n     If (MentionList.IsNot Nothing) then\r\n       'fetch all properties like\r\n        For Each itemMention As String In MentionList\r\n         itemMention.ID  -- id of Mention\r\n         itemMention.Place -- Place of Mention\r\n         itemMention.Name -- Name of Mention\r\n         itemMention.Text -- Text of Mention\r\n         itemMention.DateTime -- DateTime  of Mention\r\n         itemMention.ImageUrl -- ImageUrl in Mention\r\n         itemMention.Likes -- Likes of Mention\r\n         itemMention.LinkUrl -- LinkUrl of Mention\r\n         itemMention.Source\t-- Source  of Mention\r\n                     \t\r\n        Next\r\n    End If\r\n\r\n\r\nFacebook Groups\r\n--\r\nYou can use this API to get groups from users social network - Facebook.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**C#.Net**\r\n\r\n    LoginRadiusSDK.LoginRadiusGetGroups lrGroups= new\r\n    LoginRadiusSDK. LoginRadiusGetGroups (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\");   \r\n         \t\r\n    Var GroupList= lrGroups.GetGroups ();\r\n    \tIf (GroupList!= null)\r\n            {\r\n               //fetch all properties like\r\n    \t   foreach (var itemGroups in GroupList)\r\n               {\r\n    \t\t// itemEvent.ID -- id of event\r\n    \t\t// itemEvent.Name -- Name of Event\r\n               }\r\n            }\r\n\r\n**VB.Net**\r\n\r\n    Dim lrGroups As New LoginRadiusSDK.LoginRadiusGetGroups  (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\")  \r\n         \r\n    Dim GroupList As LoginRadiusSDK.LoginRadiusGetGroups = lrGroups.GetGroups ()\r\n      If (GroupList.IsNot Nothing) then\r\n           'fetch all properties like\r\n    \tFor Each itemGroups As String In GroupList\r\n    \t\t'itemEvent.ID -- id of event\r\n                    'itemEvent.Name -- Name of Event\r\n            Next\r\n      End if\r\n\r\n\r\nGet LinkedIn follow companies\r\n--\r\nYou can use this API to get followed companies list from users social network - LinkedIn.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**C#.Net**\r\n\r\n    LoginRadiusSDK.LoginRadiusGetCompaines lrfollowcompanies = new LoginRadiusSDK.LoginRadiusGetCompaines (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\");\r\n     Var companylist = lrfollowcompanies.GetFollowCompaines();\r\n      If (companylist!= null)\r\n      {\r\n         foreach (var followcompany in companylist)\r\n         {\r\n    \t//followcompany.ID  - followcompany ID\r\n            //followcompany.Name – followcompany Name\t\r\n         }\r\n       }\r\n\r\n**VB.Net**\r\n\r\n    Dim lrfollowcompanies As New LoginRadiusSDK.LoginRadiusGetCompaines  (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\")\r\n    Dim companylist As LoginRadiusSDK.LoginRadiusGetCompaines = lrfollowcompanies.GetFollowCompaines()\r\n      If (companylist.IsNot Nothing) then\r\n    \tFor Each followcompany As String In companylist\r\n                'followcompany.ID  - followcompany ID\r\n                'followcompany.Name - followcompany Name\t\r\n            Next\r\n       End If\r\n\r\nGet Facebook events\r\n--\r\nYou can use this API to get events from users social network - Facebook.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**C#.Net**\r\n\r\n    LoginRadiusSDK.LoginRadiusGetEvents lrEvent = new\r\n    LoginRadiusSDK.LoginRadiusGetEvents (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\");       \r\n    Var EventList= lrEvent.GetEvents ();\r\n    \r\n        If (EventList!= null)\r\n        {\r\n           //fetch all properties like\r\n           foreach (var itemEvent in EventList)\r\n           {\r\n     \t  //itemEvent.ID     \t-- id of event\r\n     \t //itemEvent.Location   -- location of event\r\n            //itemEvent.Name   \t-- Name of Event\r\n            //itemEvent.RsvpStatus -– Status of event\r\n            //itemEvent.StartTime  -- Start Time of Event\r\n                    \t\r\n            }\r\n        }\r\n\r\n**VB .Net**\r\n\r\n    Dim lrEvent As New LoginRadiusSDK.LoginRadiusGetEvents  (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\")   \r\n    Dim EventList As LoginRadiusSDK.LoginRadiusGetEvents = lrEvent.GetEvents ()\r\n    \tIf (EventList.IsNot Nothing) then\r\n               'fetch all properties like\r\n    \t   For Each itemEvent As String In EventList\r\n    \t\t'itemEvent.ID -- id of event\r\n    \t\t'itemEvent.Location -- location of event\r\n    \t\t'itemEvent.Name -- Name of Event\r\n    \t\t'itemEvent.RsvpStatus -- Status of event\r\n    \t\t'itemEvent.StartTime  -- Start Time of Event\r\n    \t    Next\r\n          End If\r\n\r\nGet Status\r\n---\r\nYou can use this API to get status messages from users social network - Facebook.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**C#.Net**\r\n\r\n    LoginRadiusSDK.LoginRadiusStatus lrstatus = new LoginRadiusSDK.LoginRadiusStatus (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\");\r\n       Var statuslist = lrstatus. GetStatuses ();\r\n             If (statuslist!= null)\r\n             {\r\n               foreach (var status in statuslist)\r\n      \t   {\r\n                 // status.ID  - status ID\r\n                 // status.ImageUrl– status Image Url  \r\n    \t    // status.Likes – status Likes\r\n                // status.Text – status Text\r\n                // status.LinkUrl – status LinkUrl\r\n    \t    // status.Place – status place\r\n                // status.Source – status source\r\n                       \t\r\n               }\r\n             }\r\n\r\n**VB .Net**\r\n\r\n    Dim lrstatus As New LoginRadiusSDK.LoginRadiusStatus  (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\")\r\n    Dim lrstatusAs LoginRadiusSDK.LoginRadiusStatus =lrstatus. GetStatuses ()\r\n       If (statuslist.IsNot Nothing) then\r\n    \tFor Each status As String In statuslist\r\n                 'status.ID  - status ID\r\n                 'status.ImageUrl- status Image Url  \r\n    \t     'status.Likes - status Likes\r\n     'status.Text - status Text\r\n     \t     'status.LinkUrl - status LinkUrl\r\n    \t     'status.Place - status place\r\n    \t     'status.Source - status source\t\r\n             Next\r\n        End If\r\n\r\n\r\nGet TimeLine\r\n--\r\nSaved/Get Your LoginRadius Token That LoginRadius Provide You When You Login   , authenticate from LoginRadius .\r\n\r\n**C#.Net**\r\n\r\n    LoginRadiusSDK.LoginRadiusGetTimeLine\r\n    lrtimeline = new LoginRadiusSDK.LoginRadiusGetTimeLine (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\");\r\n    \tVar timelinelist = lrtimeline.GetTimeLine();\r\n            If (timelinelist!= null)\r\n            {\r\n              foreach (var timeline in timelinelist)\r\n              {\r\n    \t\t// timeline.ID  - timeline ID\r\n    \t\t// timeline.ImageUrl– timeline Image Url  \t\r\n    \t\t// timeline.Likes – timeline Likes\r\n    \t \t// timeline.Text – timeline Text\r\n    \t\t// timeline.LinkUrl – timeline LinkUrl\r\n    \t\t// timeline.Place – timeline place\r\n    \t\t// timeline.Source – timeline source\r\n               }\r\n            }\r\n\r\n**VB.Net**\r\n\r\n    Dim lrtimeline As New LoginRadiusSDK.LoginRadiusGetTimeLine (\"LoginRadius-session-Token\",\"Your-LoginRadius-Secret-key\")\r\n    \r\n    Dim timelinelist As LoginRadiusSDK.LoginRadiusGetTimeLine =  lrtimeline.GetTimeLine()\r\n           If (timelinelist.IsNot Nothing) then\r\n           \tFor Each timeline As String In timelinelist\r\n    \t   'timeline.ID  - timeline ID\r\n     \t   'timeline.ImageUrl- timeline Image Url  \t\r\n    \t   'timeline.Likes - timeline Likes\r\n    \t   'timeline.Text - timeline Text\r\n    \t   'timeline.LinkUrl - timeline LinkUrl\r\n     \t   'timeline.Place - timeline place\r\n    \t   'timeline.Source - timeline source\r\n             Next\r\n           End If\r\n\r\n**Request:** Please let us know your feedback and comments. If you have any questions or need a further assistance please contact us at hello@loginradius.com.\r\n","google":"UA-22321867-5","note":"Don't delete this file! It's used internally to help with page regeneration."}